package ${cfg.servicePackage};

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;
import com.thd.dao.PubDao;
import ${cfg.pojoPackage}.${cfg.tableCodeForClass};
import ${cfg.servicePackage}.${cfg.serviceName};
import com.thd.service.PubServiceImpl;
import com.thd.util.Page;
import com.thd.util.StringUtil;
/**
 * file autogenerated by ThirdteenDevils's CodeGenUtil 
 */
public class ${cfg.serviceName}Impl extends PubServiceImpl implements ${cfg.serviceName} {
	@Resource 
	private PubDao pubDao;
	
	/*
	 * (non-Javadoc)
	 * @see ${cfg.servicePackage}.${cfg.tableCodeForClass}Service#query${cfg.tableCodeForClass}(java.util.Map, com.ccse.hr.util.Page)
	 */
	public List query${cfg.tableCodeForClass}(Map<String,String> m , Page p){
		List<String> param = new ArrayList<String>();
		
		String sql = "select "+
			" t.${cfg.pkColumn.columnCodeForUpper} as ${cfg.pkColumn.columnCodeForUpper}, " + //0  ${cfg.pkColumn.columnName} 
		<#list cfg.columnList as col> 
			" t.${col.columnCodeForUpper} as ${col.columnCodeForUpper}<#if col_has_next>,</#if> " + //${col_index} ${col.columnName} 			
		</#list>
			
			" from ${cfg.tableCodeForUpper} t  where 1=1 ";
		
		if(m!=null){
			if(StringUtil.isNotEmpty(m.get("${cfg.pkColumn.columnCodeForUpper}"))){
				sql += " and t.${cfg.pkColumn.columnCodeForUpper} like ? ";
				param.add("%" + m.get("${cfg.pkColumn.columnCodeForUpper}").toString().trim() + "%");
			}
			<#list cfg.columnList as col> 
				<#if col.columnType=="java.lang.String">
				if(StringUtil.isNotEmpty(m.get("${col.columnCodeForUpper}"))){
					sql += " and upper(t.${col.columnCodeForUpper}) like upper(?) ";
					param.add("%" + m.get("${col.columnCodeForUpper}").toString().trim() + "%");
				}
				</#if>
				<#if col.columnType!="java.lang.String">
				if(StringUtil.isNotEmpty(m.get("${col.columnCodeForUpper}"))){
					sql += " and t.${col.columnCodeForUpper} = ? ";
					param.add(m.get("${col.columnCodeForUpper}").toString().trim());
				}
				</#if>
			</#list>
			
		}
		
		
		//排序
		if(StringUtil.isNotEmpty((String)m.get("sort"))){
			sql+=" order by " + m.get("sort").toString().toUpperCase() + " " +m.get("order").toString().toUpperCase();
		}
		
		
		System.out.println(sql);
		List l = this.pubDao.findBySqlToMap(sql,param.toArray(), p);	
		return l;

	};
	
	/*
	 * (non-Javadoc)
	 * @see ${cfg.servicePackage}.${cfg.tableCodeForClass}Service#save${cfg.tableCodeForClass}(${cfg.pojoPackage}.${cfg.tableCodeForClass})
	 */
	public void save${cfg.tableCodeForClass}(${cfg.tableCodeForClass} obj) {
		this.pubDao.save(obj);
	};
	/*
	 * (non-Javadoc)
	 * @see ${cfg.servicePackage}.${cfg.tableCodeForClass}Service#update${cfg.tableCodeForClass}(${cfg.pojoPackage}.${cfg.tableCodeForClass})
	 */
	public void update${cfg.tableCodeForClass}(${cfg.tableCodeForClass} obj){
		this.pubDao.update(obj);
	};

	/*
	 * (non-Javadoc)
	 * @see ${cfg.servicePackage}.${cfg.tableCodeForClass}Service#query${cfg.tableCodeForClass}ById(${cfg.pkColumn.columnType})
	 */
	public ${cfg.tableCodeForClass} query${cfg.tableCodeForClass}ById(${cfg.pkColumn.columnType} pk){
		return (${cfg.tableCodeForClass})this.pubDao.findById(${cfg.tableCodeForClass}.class,pk);
	};
	
	/*
	 * (non-Javadoc)
	 * @see ${cfg.servicePackage}.${cfg.tableCodeForClass}Service#delete${cfg.tableCodeForClass}ById(${cfg.pkColumn.columnType})
	 */
	public void delete${cfg.tableCodeForClass}ById(${cfg.pkColumn.columnType} pk){
		${cfg.tableCodeForClass} obj = this.query${cfg.tableCodeForClass}ById(pk);
		this.pubDao.delete(obj);
	};
	
	
	/**
	 * 批量删除${cfg.tableName}对象
	 * @param ids 主键,多个主键用","隔开
	 */
	public void delete${cfg.tableCodeForClass}ByIds(String ids){
		if(ids!=null && !ids.trim().equals("")){
			String[] idArray = ids.split(",");
			if(idArray.length > 0){
				for(String id : idArray){
					if(id!=null &&  !id.trim().equals("")){
						<#if cfg.pkColumn.columnType=="java.lang.String">
							delete${cfg.tableCodeForClass}ById(id);
						</#if>
						<#if cfg.pkColumn.columnType=="java.lang.Integer">
							delete${cfg.tableCodeForClass}ById(Integer.parseInt(id));
						</#if>
						<#if cfg.pkColumn.columnType=="java.lang.Float">
							delete${cfg.tableCodeForClass}ById(Float.parseFloat(id));
						</#if>
						<#if cfg.pkColumn.columnType=="java.lang.Long">
							delete${cfg.tableCodeForClass}ById(Long.parseLong(id));
						</#if>
						<#if cfg.pkColumn.columnType=="java.lang.Double">
							delete${cfg.tableCodeForClass}ById(Double.parseDouble(id));
						</#if>
						
						
					}
				}
			}
		}
	};
	
	
	
	
}
